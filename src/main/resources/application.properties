## Server Properties
server.port=${PORT:8080}

## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url= jdbc:mysql://35.186.152.253:3306/baseProject?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username= root
#spring.datasource.password= Jackie56*
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

##H2 Database
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=

##GCP Cloud SQL
#https://github.com/spring-cloud/spring-cloud-gcp/tree/main/spring-cloud-gcp-samples/spring-cloud-gcp-sql-mysql-sample
spring.cloud.gcp.sql.instance-connection-name=total-platform-327915:asia-southeast1:venus
spring.cloud.gcp.sql.database-name=venusDB

# Configure username/password
spring.datasource.password=123@123a

# Configure connection pooling if needed
spring.datasource.hikari.maximum-pool-size=10

spring.cloud.gcp.project-id=polar-arcana-293705
spring.cloud.gcp.credentials.location=classpath:total-platform-327915-f991a3e24808.json

## Hibernate Properties
spring.jpa.properties.hibernate.format_sql = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.hibernate.ddl-auto = update

# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG

# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always

spring.jpa.show-sql=false

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC

## App Properties
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000